),
`subarea-2` = div(
style = "background: #a0a0a0; border: 5px solid gray;",
tags$label("I dont have the right area class, but im called as a named argument")
),
gridPanel(
class = "subarea-3",
style = "background: #4c4c4c; border: 5px solid gray;",
areas = list(
default = c(
"subsubarea-1",
"subsubarea-2",
"subsubarea-3"
),
xs = c(
"subsubarea-1 subsubarea-1",
"subsubarea-2 subsubarea-3"
)
),
gap = list(
default = "0",
xs = "5%"
),
div(
class = "subsubarea-1",
style = "background: #71A5FF; border: 5px solid blue;",
tags$label("We need to go deeper")
),
div(
class = "subsubarea-2",
style = "background: #72E7E8; border: 5px solid blue;"
),
gridPanel(
class = "subsubarea-3",
style = "background: #8AFFB1; border: 5px solid blue;",
rows = "repeat(4, 1fr)",
div(style = "background: #8AFF91; border: 3px solid green;"),
div(style = "background: #8AFF81; border: 3px solid green;"),
div(style = "background: #8AFF71; border: 3px solid green;"),
gridPanel(
style = "background: #8AFF61; border: 3px solid green;",
columns = "1fr 1fr 1fr",
div(style = "background: #8A1F91; border: 2px solid yellow;"),
div(style = "background: #8A2F81; border: 2px solid yellow;"),
div(style = "background: #8A3F71; border: 2px solid yellow;")
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
golem::document_and_reload(); SeaCloneR::run_app()
runApp('R')
runApp('R')
shiny::runApp('R')
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
getwd()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
runApp('R')
months()
icon("landmark")
runApp('R')
runApp('R')
runApp('R')
runApp('R')
shiny::runApp('R')
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
setwd("../SeaCloneR/")
dir("inst/app/")
dir("inst/app/")
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
h3(icon("book-open"))
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
icon("book-open", class = "h3")
icon("book-open", class = "h1")
icon("book-open", class = "h1")
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
?shinyTree
?shinyTree::shinyTree
# * Bibliography ----
observeEvent(input$bibliography, {
showModal(
ui = modalDialog()
)
})
golem::document_and_reload(); SeaCloneR::run_app(dev=TRUE)
golem::document_and_reload(); SeaCloneR::run_app()
x
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
main.env$tree.bibliography
?navlistPanel()
library(shiny)
ui <- fluidPage(
fluidPage(
titlePanel("Application Title"),
navlistPanel(
"Header",
tabPanel("First"),
tabPanel("Second"),
tabPanel("Third")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
fluidPage(
titlePanel("Application Title"),
navlistPanel(
"Header",
tabPanel("First"),
tabPanel("Second"),
tabPanel("Third"),
"Header2",
tabPanel("Fourth")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
fluidPage(
titlePanel("Application Title"),
navlistPanel(
"Header",
tabPanel("First"),
tabPanel("Second"),
tabPanel("Third"),
"Header2",
tabPanel("Fourth")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
fluidPage(
titlePanel("Application Title"),
navlistPanel(
"Header",
tabPanel("First"),
tabPanel("Second"),
tabPanel("Third"),
"Header2",
tabPanel("Fourth")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
golem::document_and_reload(); SeaCloneR::run_app()
devtools::build(path = ".")
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
system.file(".", package = "SeaClone")
system.file(package = "SeaClone")
system.file("app", package = "SeaClone")
dir(system.file("app", package = "SeaClone"))
dir(system.file(".", package = "SeaClone"))
app_sys()
dir(app_sys())
dir(system.file("app", package = "SeaClone"))
dir(system.file("/app", package = "SeaClone"))
dir(system.file("/app/www/", package = "SeaClone"))
system.file(package = "SeaClone")
system.file(package = "SeaCloneR")
dir(system.file(package = "SeaCloneR"))
dir(system.file("app", package = "SeaCloneR"))
dir(system.file("app/data", package = "SeaCloneR"))
fread(system.file("app/data/events.ods", package = "SeaCloneR"))
data.table::fread(system.file("app/data/events.ods", package = "SeaCloneR"))
data.table::fread(system.file("app/data/events.csv", package = "SeaCloneR"))
golem::document_and_reload(); SeaCloneR::run_app()
test <- factor(LETTERS[1:10])
test
test[3] > test[7]
main.env$time$MONTHS
isolate(main.env$time$MONTHS)
isolate(main.env$time$month)
match(isolate(main.env$time$month), isolate(main.env$time$MONTHS))
match("mar", isolate(main.env$time$MONTHS))
devtools::build(path = ".")
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
system.file("app/media", package = "SeaCloneR")
dir(system.file("app/media", package = "SeaCloneR"))
file.exists(system.file("app/www/styles.css", package = "SeaCloneR"))
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
system.file("app/media", package = "SeaCloneR")
dir.exists(system.file("app/media", package = "SeaCloneR"))
x = try(addResourcePath(
"media",
system.file("app/media", package = "SeaCloneR")
))
x
x <- try(addResourcePath(
"media",
system.file("app/media", package = "SeaCloneR")
))
x
try(addResourcePath(
"media",
system.file("app/media", package = "SeaCloneR")
))
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
resourcePaths()
dir("media")
tags$img(src="media/logo.png")
library(shiny)
ui <- fluidPage(
span(
icon("euro-sign"), icon("minus"),
" = ",
icon("flask"), icon("plus")
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tagList(
tags$p("Vous pouvez proposer un stage à un étudiant afin de vous faire
aider dans vos recherches."),
actionButton("intern", "Stagiaire", icon("plus")),
span(
span(icon("euro-sign"), icon("minus"), style = "color: red"),
" = ",
span(icon("flask"), icon("plus"), style = "color:green")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tagList(
tags$p("Vous pouvez proposer un stage à un étudiant afin de vous faire
aider dans vos recherches."),
actionButton("intern", "Stagiaire", icon("plus")),
span(
span(icon("euro-sign"), icon("minus"), style = "color: red"),
" = ",
span(icon("flask"), icon("plus"), style = "color:green")
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
golem::document_and_reload(); SeaCloneR::run_app()
resoure
resourcePaths()
golem::document_and_reload(); SeaCloneR::run_app()
Q
Q
resourcePaths()
resourcePaths()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
library(shiny)
ui <- fluidPage(
span(
span(icon("flask"), icon("question"), style = "color:blue")
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
span(
span(icon("flask"), icon("question"), style = "color:blue")
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
file.exists("media/oceanhackathon5_underwater2.mp4")
golem::document_and_reload(); SeaCloneR::run_app()
library(shiny)
ui <- fluidPage(
tags$video(
src="inst/app/media/oceanhackathon5_underwater2.mp4"
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$video(
src="inst/app/media/oceanhackathon5_underwater2.mp4",
type = "video/mp4"
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
tags$video(
src="inst/app/media/oceanhackathon5_underwater2.mp4",
type = "video/mp4"
)
tags$source(src="inst/app/media/oceanhackathon5_underwater2.mp4" type="video/mp4")
tags$source(src="inst/app/media/oceanhackathon5_underwater2.mp4", type="video/mp4")
tags$video(tags$source(src="inst/app/media/oceanhackathon5_underwater2.mp4", type="video/mp4"))
library(shiny)
ui <- fluidPage(
tags$source(src="inst/app/media/oceanhackathon5_underwater2.mp4", type="video/mp4")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tags$source(src="inst/app/media/oceanhackathon5_underwater2.mp4", type="video/mp4")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
tagList(
tags$video(
autoplay = "autoplay",
tags$source(
src="inst/app/media/oceanhackathon5_underwater2.mp4",
type="video/mp4"
)
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
tags$video(
autoplay = "autoplay",
tags$source(
src="inst/app/media/oceanhackathon5_underwater2.mp4",
type="video/mp4"
)
)
library(shiny)
ui <- fluidPage(
HTML("<video autoplay="autoplay">
<source src="inst/app/media/oceanhackathon5_underwater2.mp4" type="video/mp4"/>
</video>")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML("<video autoplay='autoplay'>
<source src='inst/app/media/oceanhackathon5_underwater2.mp4' type='video/mp4'/>
</video>")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://www.youtube.com/embed/T1-k7VYwsHg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="inst/app/media/oceanhackathon5_underwater2.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML("
<video width='320' height='240' controls>
<source src='inst/app/media/oceanhackathon5_underwater2.mp4' type='video/mp4'>
Your browser does not support the video tag.
</video>")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://youtu.be/QXFHTW2sxBc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="inst/app/media/oceanhackathon5_underwater2.mp4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://www.youtube.com/embed/T1-k7VYwsHg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://www.youtube.com/watch?v=QXFHTW2sxBc&feature=youtu.be" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://www.youtube.com/embed/QXFHTW2sxBc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
HTML('<iframe width="560" height="315" src="https://www.youtube.com/embed/WDdUWBVd-cE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>')
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
golem::document_and_reload(); SeaCloneR::run_app()
